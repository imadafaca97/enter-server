// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Provincia {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String
  path String
  proyectos Proyecto[]
  empleados Empleado[]
}

model Proyecto {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String
  empleadosIds String[] @db.ObjectId
  provinciaId String
  
  provincia Provincia @relation(fields: [provinciaId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  empleados Empleado[] @relation(fields: [empleadosIds], references: [id])
}
model Empleado {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String
  role String 
  proyectosIds String[] @db.ObjectId
  provinciaId String @default("6271b01ba5394f5c9e7cf63e")
  permits Permits[]
  entryID  EmployeesEntry?

  provincia Provincia @relation(fields: [provinciaId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  proyectos Proyecto[] @relation(fields: [proyectosIds], references: [id])
}

model Users {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  docNumber String
  name String
  lastName String
  email String
  status Boolean
  isSupervisor Boolean
  userCreated Boolean
  roleID String
  @@fulltext([name])
  role userRole @relation(fields: [roleID], references: [id])
}

model userRole {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String @unique
  status Boolean @default(true)
  description String
  users Users[]
}

model Permits {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  idEmployee String
  description String

  Permits Empleado @relation(fields: [idEmployee], references: [id])
}

model EmployeesEntry {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  employeeID String
  employee Empleado @relation(fields: [employeeID], references: [id])
}
